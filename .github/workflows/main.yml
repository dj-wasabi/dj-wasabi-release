# This will execute some scripts on main branch.

name: MasterRun

on:
  push:
    branches:
    - main

  workflow_dispatch:

jobs:
  runme:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout current repo
      uses: actions/checkout@v3

    - name: Commit Changelog file
      run: |
        # Generate CHANGELOG.md file
        ./release.sh -d

        # Let commit the changes if there are any? (Well there should be!)
        if [[ $(git status | grep -c 'CHANGELOG.md' || true) -gt 0 ]]
          then  echo "Committing file"
                git config --global user.name 'Werner Dijkerman [GH bot]'
                git config --global user.email 'github@dj-wasabi.nl'

                git add CHANGELOG.md
                git commit -m "Updated CHANGELOG.md on \"$(date "+%Y-%m-%d %H:%M:%S")\"" CHANGELOG.md

                # Get the tag
                BUILD_VERSION=$(grep '^version:' dj-wasabi.yml | awk '{print $2}')
                BUILD_VERSION_LAST=$(git for-each-ref --sort=creatordate --format '%(refname)' refs/tags | sed 's/refs\/tags\///g' | grep "${BUILD_VERSION}" | tail -n1)
                BUILD_VERSION_PATCH=$(echo "${BUILD_VERSION_LAST:-0}" | awk -F '.' '{print $NF}')
                NEW_TAG="${BUILD_VERSION}.$(expr "${BUILD_VERSION_PATCH}" + 1)"
                ./release.sh -c "${NEW_TAG}"
                git push
        fi
      env:
        CHANGELOG_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-n-publish:
    name: Build and publish Python to PyPI
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.x

    - name: Install and execute buid
      run: |
        export CURRENT_BRANCH=$(git branch --show-current)
        export CURRENT_TAG=$(git tag --sort=-creatordate | head -n1)
        python -m pip install build setuptools
        python setup.py sdist

    - name: Publish distribution to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}
